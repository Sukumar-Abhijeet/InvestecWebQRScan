"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
exports.default = utils_1.createRule({
    name: "no-redundant-flow",
    meta: {
        type: "suggestion",
        fixable: "code",
        hasSuggestions: true,
        schema: [],
        docs: {
            description: "Remove redundant uses of flow",
            recommended: "warn",
        },
        messages: {
            redundantFlow: "flow can be removed because it takes only one argument",
            removeFlow: "remove flow",
        },
    },
    defaultOptions: [],
    create: function (context) {
        var isFlowExpression = utils_1.contextUtils(context).isFlowExpression;
        return {
            CallExpression: function (node) {
                if (node.arguments.length === 1 && isFlowExpression(node)) {
                    context.report({
                        node: node,
                        messageId: "redundantFlow",
                        suggest: [
                            {
                                messageId: "removeFlow",
                                fix: function (fixer) {
                                    return [
                                        fixer.removeRange([
                                            node.callee.range[0],
                                            node.callee.range[1] + 1,
                                        ]),
                                        fixer.removeRange([node.range[1] - 1, node.range[1]]),
                                    ];
                                },
                            },
                        ],
                    });
                }
            },
        };
    },
});
