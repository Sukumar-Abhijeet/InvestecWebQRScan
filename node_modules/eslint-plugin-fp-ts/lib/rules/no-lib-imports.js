"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var experimental_utils_1 = require("@typescript-eslint/experimental-utils");
var utils_1 = require("../utils");
exports.default = utils_1.createRule({
    name: "no-lib-imports",
    meta: {
        type: "problem",
        fixable: "code",
        docs: {
            description: "Disallow imports from 'fp-ts/lib'",
            recommended: "error",
        },
        schema: [],
        messages: {
            importNotAllowed: "Importing from {{ detected }} is not allowed, import from {{ fixed }} instead",
        },
    },
    defaultOptions: [],
    create: function (context) {
        return {
            ImportDeclaration: function (node) {
                var sourceValue = experimental_utils_1.ASTUtils.getStringIfConstant(node.source);
                var forbiddenImportPattern = /^fp-ts\/lib\//;
                if (sourceValue === null || sourceValue === void 0 ? void 0 : sourceValue.match(forbiddenImportPattern.source)) {
                    var fixedImportSource_1 = sourceValue.replace(forbiddenImportPattern, "fp-ts/");
                    context.report({
                        node: node.source,
                        messageId: "importNotAllowed",
                        data: {
                            detected: node.source.value,
                            fixed: fixedImportSource_1,
                        },
                        fix: function (fixer) {
                            var quote = utils_1.inferQuote(node.source);
                            return fixer.replaceText(node.source, "" + quote + fixedImportSource_1 + quote);
                        },
                    });
                }
            },
        };
    },
});
